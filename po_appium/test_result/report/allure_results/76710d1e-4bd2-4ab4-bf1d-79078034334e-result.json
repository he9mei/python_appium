{"name": "test_login_01_custom_login[18500228275-111111-登录成功]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <po_appium.test_case.test_01_login.TestLogin object at 0x11183c670>, driver = <appium.webdriver.webdriver.WebDriver (session=\"1e57aa38-0352-4f3c-878c-9773cf4e76e7\")>\naccount = '18500228275', pw = '111111', toast = '登录成功'\n\n    @pytest.mark.parametrize(\"account,pw,toast\", [(\"18500228275\", \"111111\", \"登录成功\")])\n    # @pytest.mark.parametrize(\"data\",login_data)\n    # @pytest.mark.parametrize(\"account,pw,toast\",[(\"\",\"\",\"请输入用户名\"),\n    #                                              (\"18500228275\",\"\",\"请输入密码\"),\n    #                                              (\"12345678901\",\"111111\",\"用户名或密码输入错误\"),\n    #                                              (\"18500228275\",\"000000\",\"用户名或密码输入错误\"),\n    #                                              (\"18500000099\",\"111111\",\"该用户名不存在\"),\n    #                                              (\"18500228275\",\"111111\",\"登录成功\")])\n    # @pytest.mark.parametrize(\"account,pw\",[(\"\",\"\"),(\"18500228275\",\"\"),(\"12345678901\",\"111111\"),(\"18500228275\",\"000000\"),(\"18500228275\",\"111111\")])\n    # @pytest.mark.parametrize(\"account,pw\",[(\"18500228275\",\"111111\"),(\"hhm1@163.com\",\"111111\")])\n    # @pytest.mark.parametrize(\"account,pw\", [(\"18500228275\", \"111111\")])\n    def test_login_01_custom_login(self, driver, account, pw, toast):  #修改：此处去掉传入logger,直接在py文件内赋值logger\n    # def test_1_custom_login(self,driver,logger,data):\n        logger.info(\"---测试登录流程---\")\n        # print(f\"获得conftest.py的driver是：{driver}\")\n        login=Login(driver,logger)  #此处依旧传入logger\n        settings = Settings(driver,logger)   #此处依旧传入logger\n        settings.logout()\n        login.custom_login_enter()\n        # login.custom_login(\"18500228275\",\"111111\")\n        # login.custom_login(account,pw)\n>       login.custom_login(account,pw,toast)  #把toast也参数化\n\ntest_case/test_01_login.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npage_object/login_page.py:84: in custom_login\n    text = self.get_toast(toast)\nbase/base_page.py:120: in get_toast\n    ele=WebDriverWait(self.driver,10,0.1).until(EC.presence_of_element_located(el_toast))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"1e57aa38-0352-4f3c-878c-9773cf4e76e7\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x11195c250>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../../untitled/venv/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException"}, "attachments": [{"name": "log", "source": "db9bb6d0-822b-4669-aee3-84452ada99a0-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "account", "value": "'18500228275'"}, {"name": "pw", "value": "'111111'"}, {"name": "toast", "value": "'登录成功'"}], "start": 1589803184628, "stop": 1589803231739, "uuid": "b3ae5726-b803-4141-97bc-ce1a87e7313a", "historyId": "a884dd59d8675823c9ed9596de1e6a3f", "testCaseId": "6edcff5724273fc28f4d2b03d15e9012", "fullName": "test_case.test_01_login.TestLogin#test_login_01_custom_login", "labels": [{"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_01_login"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "hehuaimeideMacBook-Pro.local"}, {"name": "thread", "value": "67752-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_01_login"}]}