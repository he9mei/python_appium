{"name": "test_search_0_case1", "status": "failed", "statusDetails": {"message": "teamcity.diff_tools.EqualsAssertionError:  :: www.baidu.com != 百度一下，你就知道", "trace": "self = <unitest_leaning.test_case.test_baidu_search_02.TestBaiduSearch testMethod=test_search_0_case1>\nfirst = 'www.baidu.com', second = '百度一下，你就知道', msg = None\n\n    def _patched_equals(self, first, second, msg=None):\n        try:\n>           old(self, first, second, msg)\n\n/Applications/PyCharm CE.app/Contents/helpers/pycharm/teamcity/diff_tools.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <unitest_leaning.test_case.test_baidu_search_02.TestBaiduSearch testMethod=test_search_0_case1>\nfirst = 'www.baidu.com', second = '百度一下，你就知道', msg = None\n\n    def assertEqual(self, first, second, msg=None):\n        \"\"\"Fail if the two objects are unequal as determined by the '=='\n           operator.\n        \"\"\"\n        assertion_func = self._getAssertEqualityFunc(first, second)\n>       assertion_func(first, second, msg=msg)\n\n/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/unittest/case.py:912: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <unitest_leaning.test_case.test_baidu_search_02.TestBaiduSearch testMethod=test_search_0_case1>\nfirst = 'www.baidu.com', second = '百度一下，你就知道', msg = None\n\n    def assertMultiLineEqual(self, first, second, msg=None):\n        \"\"\"Assert that two multi-line strings are equal.\"\"\"\n        self.assertIsInstance(first, str, 'First argument is not a string')\n        self.assertIsInstance(second, str, 'Second argument is not a string')\n    \n        if first != second:\n            # don't use difflib if the strings are too long\n            if (len(first) > self._diffThreshold or\n                len(second) > self._diffThreshold):\n                self._baseAssertEqual(first, second, msg)\n            firstlines = first.splitlines(keepends=True)\n            secondlines = second.splitlines(keepends=True)\n            if len(firstlines) == 1 and first.strip('\\r\\n') == first:\n                firstlines = [first + '\\n']\n                secondlines = [second + '\\n']\n            standardMsg = '%s != %s' % _common_shorten_repr(first, second)\n            diff = '\\n' + ''.join(difflib.ndiff(firstlines, secondlines))\n            standardMsg = self._truncateMessage(standardMsg, diff)\n>           self.fail(self._formatMessage(msg, standardMsg))\n\n/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/unittest/case.py:1292: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <unitest_leaning.test_case.test_baidu_search_02.TestBaiduSearch testMethod=test_search_0_case1>\nmsg = \"'www.baidu.com' != '百度一下，你就知道'\\n- www.baidu.com\\n+ 百度一下，你就知道\\n\"\n\n    def fail(self, msg=None):\n        \"\"\"Fail immediately, with the given message.\"\"\"\n>       raise self.failureException(msg)\nE       AssertionError: 'www.baidu.com' != '百度一下，你就知道'\nE       - www.baidu.com\nE       + 百度一下，你就知道\n\n/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/unittest/case.py:753: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\na = (<unitest_leaning.test_case.test_baidu_search_02.TestBaiduSearch testMethod=test_search_0_case1>,)\n\n    @wraps(func)\n    def standalone_func(*a):\n>       return func(*(a + p.args), **p.kwargs)\n\n../../../appium/venv/lib/python3.8/site-packages/parameterized/parameterized.py:518: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntest_baidu_search_02.py:25: in test_search\n    self.assertEqual(self.driver.title, \"百度一下，你就知道\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <unitest_leaning.test_case.test_baidu_search_02.TestBaiduSearch testMethod=test_search_0_case1>\nfirst = 'www.baidu.com', second = '百度一下，你就知道', msg = None\n\n    def _patched_equals(self, first, second, msg=None):\n        try:\n            old(self, first, second, msg)\n            return\n        except AssertionError as native_error:\n            if not test_filter or test_filter(self):\n                error = EqualsAssertionError(first, second, msg)\n                if error.can_be_serialized():\n>                   raise error\nE                   teamcity.diff_tools.EqualsAssertionError:  :: www.baidu.com != 百度一下，你就知道\n\n/Applications/PyCharm CE.app/Contents/helpers/pycharm/teamcity/diff_tools.py:38: EqualsAssertionError"}, "description": "百度搜索 [with name='case1', search_key='selenium']", "start": 1578391439086, "stop": 1578391464416, "uuid": "06bc756c-75e4-411f-a65f-66f6cb74bdbc", "historyId": "781693fe9c82667a457a86aaeb4894b5", "testCaseId": "1eea1fc23135b8f0ef0a7d36d3adbf27", "fullName": "unitest_leaning.test_case.test_baidu_search_02.TestBaiduSearch#test_search_0_case1", "labels": [{"name": "parentSuite", "value": "unitest_leaning.test_case"}, {"name": "suite", "value": "test_baidu_search_02"}, {"name": "subSuite", "value": "TestBaiduSearch"}, {"name": "host", "value": "hehuaimeideMacBook-Pro.local"}, {"name": "thread", "value": "11883-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "unitest_leaning.test_case.test_baidu_search_02"}]}